apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    signingConfigs {
        release
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    repositories {
        maven { url 'http://repo1.maven.org/maven2' }
    }
    defaultConfig {
        applicationId "me.ranmocy.rcaltrain"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 6
        versionName "2.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.firebase:firebase-core:17.2.1'
    implementation 'com.google.firebase:firebase-analytics:17.2.1'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.code.gson:gson:2.8.6'
    testImplementation 'com.google.truth:truth:1.0'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testImplementation "org.robolectric:robolectric:4.3.1"

    androidTestImplementation 'androidx.annotation:annotation:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'com.google.code.gson:gson:2.8.6'
    androidTestImplementation 'com.google.truth:truth:1.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.lifecycle:lifecycle-runtime:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    annotationProcessor 'androidx.lifecycle:lifecycle-compiler:2.1.0'
    implementation 'androidx.room:room-runtime:2.2.1'
    annotationProcessor 'androidx.room:room-compiler:2.2.1'
    testImplementation 'androidx.room:room-testing:2.2.1'
}

apply plugin: 'com.google.gms.google-services'

def Properties props = new Properties()
def propFile = new File('app/signing.properties')

if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null &&
            props.containsKey('keyStore') &&
            props.containsKey('keyStorePassword') &&
            props.containsKey('keyAlias') &&
            props.containsKey('keyAliasPassword')) {
        android.signingConfigs.release.storeFile = file(props['keyStore'])
        android.signingConfigs.release.storePassword = props['keyStorePassword']
        android.signingConfigs.release.keyAlias = props['keyAlias']
        android.signingConfigs.release.keyPassword = props['keyAliasPassword']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}
repositories {
    mavenCentral()
}
